DIGEST e9c1814032f8c7b4e54ec8137ecbea38
FPoly
R126:130 Lists <> <> lib
ind 144:147 <> list
constr 173:175 <> nil
constr 181:184 <> cons
R176:176 Poly <> list ind
R176:176 Poly <> X var
R190:190 Poly <> X var
R197:200 Poly <> list ind
R202:202 Poly <> X var
R204:204 Poly <> list ind
R204:204 Poly <> X var
def 216:221 <> repeat
R235:235 Poly <> X var
R245:247 Coq.Init.Datatypes <> nat ind
R252:255 Poly <> list ind
R257:257 Poly <> X var
R270:274 Poly <> count var
R290:292 Poly <> nil constr
R294:294 Poly <> X var
R300:300 Coq.Init.Datatypes <> S constr
R312:315 Poly <> cons constr
R322:327 Poly <> repeat def
R331:331 Poly <> x var
R329:329 Poly <> X var
R319:319 Poly <> x var
R317:317 Poly <> X var
def 357:368 <> test_repeat1
R388:390 Coq.Init.Logic <> ::type_scope:x_'='_x not
R374:379 Poly <> repeat def
R381:383 Coq.Init.Datatypes <> nat ind
R391:394 Poly <> cons constr
R403:406 Poly <> cons constr
R415:417 Poly <> nil constr
R419:421 Coq.Init.Datatypes <> nat ind
R408:410 Coq.Init.Datatypes <> nat ind
R396:398 Coq.Init.Datatypes <> nat ind
def 461:472 <> test_repeat2
R497:499 Coq.Init.Logic <> ::type_scope:x_'='_x not
R478:483 Poly <> repeat def
R490:494 Basics <> false constr
R485:488 Basics <> bool ind
R500:503 Poly <> cons constr
R517:519 Poly <> nil constr
R521:524 Basics <> bool ind
R510:514 Basics <> false constr
R505:508 Basics <> bool ind
mod 562:574 <> MumbleGrumble
ind 588:593 MumbleGrumble mumble
constr 608:608 MumbleGrumble a
constr 614:614 MumbleGrumble b
constr 639:639 MumbleGrumble c
R609:609 Poly <> mumble ind
R619:624 Poly <> mumble ind
R630:632 Coq.Init.Datatypes <> nat ind
R634:634 Poly <> mumble ind
R640:640 Poly <> mumble ind
ind 653:659 MumbleGrumble grumble
constr 684:684 MumbleGrumble d
constr 701:701 MumbleGrumble e
R689:694 Poly MumbleGrumble mumble ind
R696:696 Poly <> grumble ind
R696:696 Poly <> X var
R706:706 Poly <> X var
R708:708 Poly <> grumble ind
R708:708 Poly <> X var
R1101:1113 Poly MumbleGrumble <> mod
def 1126:1132 <> repeat'
R1146:1149 Poly <> list ind
R1151:1151 Poly <> X var
R1164:1168 Poly <> count var
R1184:1186 Poly <> nil constr
R1188:1188 Poly <> X var
R1194:1194 Coq.Init.Datatypes <> S constr
R1206:1209 Poly <> cons constr
R1216:1222 Poly <> repeat' def
R1226:1226 Poly <> x var
R1224:1224 Poly <> X var
R1213:1213 Poly <> x var
R1211:1211 Poly <> X var
R1250:1256 Poly <> repeat' def
R1265:1270 Poly <> repeat def
def 1284:1291 <> repeat''
R1304:1307 Poly <> list ind
R1309:1309 Poly <> X var
R1322:1326 Poly <> count var
R1342:1344 Poly <> nil constr
R1352:1352 Coq.Init.Datatypes <> S constr
R1364:1367 Poly <> cons constr
R1374:1381 Poly <> repeat'' def
R1385:1385 Poly <> x var
R1371:1371 Poly <> x var
def 1414:1420 <> list123
R1427:1430 Poly <> cons constr
R1439:1442 Poly <> cons constr
R1451:1454 Poly <> cons constr
R1463:1465 Poly <> nil constr
R1467:1469 Coq.Init.Datatypes <> nat ind
R1456:1458 Coq.Init.Datatypes <> nat ind
R1444:1446 Coq.Init.Datatypes <> nat ind
R1432:1434 Coq.Init.Datatypes <> nat ind
def 1487:1494 <> list123'
R1501:1504 Poly <> cons constr
R1511:1514 Poly <> cons constr
R1521:1524 Poly <> cons constr
R1531:1533 Poly <> nil constr
R1552:1554 Poly <> nil constr
R1552:1554 Poly <> nil constr
R1571:1574 Poly <> cons constr
R1571:1574 Poly <> cons constr
R1595:1600 Poly <> repeat def
R1595:1600 Poly <> repeat def
def 1627:1635 <> list123''
R1642:1645 Poly <> cons constr
R1650:1653 Poly <> cons constr
R1658:1661 Poly <> cons constr
R1665:1667 Poly <> nil constr
def 1682:1690 <> repeat'''
R1704:1704 Poly <> X var
R1714:1716 Coq.Init.Datatypes <> nat ind
R1721:1724 Poly <> list ind
R1726:1726 Poly <> X var
R1739:1743 Poly <> count var
R1759:1761 Poly <> nil constr
R1767:1767 Coq.Init.Datatypes <> S constr
R1779:1782 Poly <> cons constr
R1787:1795 Poly <> repeat''' def
R1797:1797 Poly <> x var
R1784:1784 Poly <> x var
def 1824:1826 <> app
R1844:1847 Poly <> list ind
R1849:1849 Poly <> X var
R1854:1857 Poly <> list ind
R1859:1859 Poly <> X var
R1872:1873 Poly <> l1 var
R1884:1886 Poly <> nil constr
R1891:1892 Poly <> l2 var
R1898:1901 Poly <> cons constr
R1910:1913 Poly <> cons constr
R1918:1920 Poly <> app def
R1924:1925 Poly <> l2 var
def 1945:1947 <> rev
R1961:1964 Poly <> list ind
R1966:1966 Poly <> X var
R1971:1974 Poly <> list ind
R1976:1976 Poly <> X var
R1989:1989 Poly <> l var
R2000:2002 Poly <> nil constr
R2007:2009 Poly <> nil constr
R2015:2018 Poly <> cons constr
R2027:2029 Poly <> app def
R2040:2043 Poly <> cons constr
R2047:2049 Poly <> nil constr
R2032:2034 Poly <> rev def
def 2069:2074 <> length
R2088:2091 Poly <> list ind
R2093:2093 Poly <> X var
R2098:2100 Coq.Init.Datatypes <> nat ind
R2113:2113 Poly <> l var
R2124:2126 Poly <> nil constr
R2137:2140 Poly <> cons constr
R2150:2150 Coq.Init.Datatypes <> S constr
R2153:2158 Poly <> length def
def 2180:2188 <> test_rev1
R2219:2222 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2242:2242 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2194:2196 Poly <> rev def
R2199:2202 Poly <> cons constr
R2207:2210 Poly <> cons constr
R2214:2216 Poly <> nil constr
R2223:2226 Poly <> cons constr
R2231:2234 Poly <> cons constr
R2238:2240 Poly <> nil constr
def 2280:2288 <> test_rev2
R2312:2314 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2293:2295 Poly <> rev def
R2298:2301 Poly <> cons constr
R2308:2310 Poly <> nil constr
R2303:2306 Basics <> true constr
R2315:2318 Poly <> cons constr
R2325:2327 Poly <> nil constr
R2320:2323 Basics <> true constr
def 2365:2376 <> test_length1
R2416:2418 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2379:2384 Poly <> length def
R2387:2390 Poly <> cons constr
R2395:2398 Poly <> cons constr
R2403:2406 Poly <> cons constr
R2410:2412 Poly <> nil constr
def 2465:2469 <> mynil
R2474:2476 Poly <> nil constr
def 2491:2495 <> mynil
R2499:2502 Poly <> list ind
R2504:2506 Coq.Init.Datatypes <> nat ind
R2511:2513 Poly <> nil constr
R2524:2526 Poly <> nil constr
def 2541:2546 <> mynil'
R2552:2554 Poly <> nil constr
R2556:2558 Coq.Init.Datatypes <> nat ind
R2584:2587 Poly <> cons constr
not 2571:2571 <> :::x_'::'_x
R2647:2649 Poly <> nil constr
not 2639:2639 <> :::'[]'
R2682:2685 Poly <> cons constr
R2693:2696 Poly <> cons constr
R2700:2701 Poly <> :::'[]' not
not 2661:2661 <> :::'['_x_';'_'..'_';'_x_']'
R2731:2733 Poly <> app def
not 2718:2718 <> :::x_'++'_x
def 2788:2797 <> list123'''
R2802:2802 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2804:2805 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2807:2808 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2810:2810 Poly <> :::'['_x_';'_'..'_';'_x_']' not
prf 2846:2854 <> app_nil_r
R2879:2882 Poly <> list ind
R2884:2884 Poly <> X var
R2895:2897 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2889:2892 Poly <> :::x_'++'_x not
R2888:2888 Poly <> l var
R2893:2894 Poly <> :::'[]' not
R2898:2898 Poly <> l var
prf 3024:3032 <> app_assoc
R3060:3063 Poly <> list ind
R3065:3065 Poly <> A var
R3082:3084 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3072:3075 Poly <> :::x_'++'_x not
R3071:3071 Poly <> l var
R3077:3080 Poly <> :::x_'++'_x not
R3076:3076 Poly <> m var
R3081:3081 Poly <> n var
R3085:3085 Poly <> :::x_'++'_x not
R3092:3096 Poly <> :::x_'++'_x not
R3087:3090 Poly <> :::x_'++'_x not
R3086:3086 Poly <> l var
R3091:3091 Poly <> m var
R3097:3097 Poly <> n var
prf 3234:3243 <> app_length
R3272:3275 Poly <> list ind
R3277:3277 Poly <> X var
R3300:3302 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3283:3288 Poly <> length def
R3293:3296 Poly <> :::x_'++'_x not
R3291:3292 Poly <> l1 var
R3297:3298 Poly <> l2 var
R3312:3314 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R3303:3308 Poly <> length def
R3310:3311 Poly <> l1 var
R3315:3320 Poly <> length def
R3322:3323 Poly <> l2 var
prf 3464:3476 <> rev_app_distr
R3504:3507 Poly <> list ind
R3509:3509 Poly <> X var
R3529:3531 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3515:3517 Poly <> rev def
R3522:3525 Poly <> :::x_'++'_x not
R3520:3521 Poly <> l1 var
R3526:3527 Poly <> l2 var
R3538:3541 Poly <> :::x_'++'_x not
R3532:3534 Poly <> rev def
R3536:3537 Poly <> l2 var
R3542:3544 Poly <> rev def
R3546:3547 Poly <> l1 var
R3630:3638 Poly <> app_nil_r thm
R3630:3638 Poly <> app_nil_r thm
R3630:3638 Poly <> app_nil_r thm
R3683:3691 Poly <> app_assoc thm
R3683:3691 Poly <> app_assoc thm
R3683:3691 Poly <> app_assoc thm
prf 3721:3734 <> rev_involutive
R3758:3761 Poly <> list ind
R3763:3763 Poly <> X var
R3778:3780 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3767:3769 Poly <> rev def
R3772:3774 Poly <> rev def
R3776:3776 Poly <> l var
R3781:3781 Poly <> l var
R3874:3886 Poly <> rev_app_distr thm
R3874:3886 Poly <> rev_app_distr thm
R3874:3886 Poly <> rev_app_distr thm
ind 3956:3959 <> prod
constr 3987:3990 <> pair
R3996:3996 Poly <> X var
R4003:4003 Poly <> Y var
R4005:4005 Poly <> prod ind
R4005:4005 Poly <> Y var
R4005:4005 Poly <> X var
R4018:4021 Poly <> pair constr
R4018:4021 Poly <> pair constr
R4062:4065 Poly <> pair constr
not 4046:4046 <> :::'('_x_','_x_')'
R4094:4097 Poly <> prod ind
not 4082:4082 <> ::type_scope:x_'*'_x
def 4130:4132 <> fst
R4153:4155 Poly <> ::type_scope:x_'*'_x not
R4152:4152 Poly <> X var
R4156:4156 Poly <> Y var
R4161:4161 Poly <> X var
R4174:4174 Poly <> p var
R4185:4185 Poly <> :::'('_x_','_x_')' not
R4187:4188 Poly <> :::'('_x_','_x_')' not
R4190:4190 Poly <> :::'('_x_','_x_')' not
def 4216:4218 <> snd
R4239:4241 Poly <> ::type_scope:x_'*'_x not
R4238:4238 Poly <> X var
R4242:4242 Poly <> Y var
R4247:4247 Poly <> Y var
R4260:4260 Poly <> p var
R4271:4271 Poly <> :::'('_x_','_x_')' not
R4273:4274 Poly <> :::'('_x_','_x_')' not
R4276:4276 Poly <> :::'('_x_','_x_')' not
def 4300:4306 <> combine
R4327:4330 Poly <> list ind
R4332:4332 Poly <> X var
R4341:4344 Poly <> list ind
R4346:4346 Poly <> Y var
R4362:4365 Poly <> list ind
R4369:4369 Poly <> ::type_scope:x_'*'_x not
R4368:4368 Poly <> X var
R4370:4370 Poly <> Y var
R4388:4389 Poly <> ly var
R4384:4385 Poly <> lx var
R4400:4401 Poly <> :::'[]' not
R4409:4410 Poly <> :::'[]' not
R4419:4420 Poly <> :::'[]' not
R4425:4426 Poly <> :::'[]' not
R4433:4436 Poly <> :::x_'::'_x not
R4442:4445 Poly <> :::x_'::'_x not
R4458:4462 Poly <> :::x_'::'_x not
R4476:4476 Poly <> :::x_'::'_x not
R4452:4452 Poly <> :::'('_x_','_x_')' not
R4454:4455 Poly <> :::'('_x_','_x_')' not
R4457:4457 Poly <> :::'('_x_','_x_')' not
R4463:4469 Poly <> combine def
def 4518:4522 <> split
R4542:4545 Poly <> list ind
R4549:4549 Poly <> ::type_scope:x_'*'_x not
R4548:4548 Poly <> X var
R4550:4550 Poly <> Y var
R4571:4571 Poly <> ::type_scope:x_'*'_x not
R4578:4582 Poly <> ::type_scope:x_'*'_x not
R4589:4589 Poly <> ::type_scope:x_'*'_x not
R4572:4575 Poly <> list ind
R4577:4577 Poly <> X var
R4583:4586 Poly <> list ind
R4588:4588 Poly <> Y var
R4602:4602 Poly <> l var
R4613:4614 Poly <> :::'[]' not
R4619:4619 Poly <> :::'('_x_','_x_')' not
R4622:4622 Poly <> :::'('_x_','_x_')' not
R4625:4625 Poly <> :::'('_x_','_x_')' not
R4620:4621 Poly <> :::'[]' not
R4623:4624 Poly <> :::'[]' not
R4637:4640 Poly <> :::x_'::'_x not
R4631:4631 Poly <> :::'('_x_','_x_')' not
R4633:4634 Poly <> :::'('_x_','_x_')' not
R4636:4636 Poly <> :::'('_x_','_x_')' not
R4656:4660 Poly <> split def
R4675:4675 Poly <> :::'('_x_','_x_')' not
R4678:4679 Poly <> :::'('_x_','_x_')' not
R4682:4682 Poly <> :::'('_x_','_x_')' not
R4687:4687 Poly <> :::'('_x_','_x_')' not
R4695:4696 Poly <> :::'('_x_','_x_')' not
R4704:4704 Poly <> :::'('_x_','_x_')' not
R4689:4692 Poly <> :::x_'::'_x not
R4698:4701 Poly <> :::x_'::'_x not
def 4732:4741 <> test_split
R4773:4775 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4746:4750 Poly <> split def
R4752:4752 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4762:4762 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4772:4772 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4753:4753 Poly <> :::'('_x_','_x_')' not
R4755:4755 Poly <> :::'('_x_','_x_')' not
R4761:4761 Poly <> :::'('_x_','_x_')' not
R4756:4760 Basics <> false constr
R4763:4763 Poly <> :::'('_x_','_x_')' not
R4765:4765 Poly <> :::'('_x_','_x_')' not
R4771:4771 Poly <> :::'('_x_','_x_')' not
R4766:4770 Basics <> false constr
R4776:4776 Poly <> :::'('_x_','_x_')' not
R4782:4782 Poly <> :::'('_x_','_x_')' not
R4796:4796 Poly <> :::'('_x_','_x_')' not
R4777:4777 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4779:4779 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4781:4781 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4783:4783 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4789:4789 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4795:4795 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4784:4788 Basics <> false constr
R4790:4794 Basics <> false constr
mod 4853:4868 <> OptionPlayground
ind 4882:4887 OptionPlayground option
constr 4912:4915 OptionPlayground Some
constr 4929:4932 OptionPlayground None
R4922:4922 Poly <> X var
R4924:4924 Poly <> option ind
R4924:4924 Poly <> X var
R4933:4933 Poly <> option ind
R4933:4933 Poly <> X var
R4946:4949 Poly OptionPlayground Some constr
R4946:4949 Poly OptionPlayground Some constr
R4968:4971 Poly OptionPlayground None constr
R4968:4971 Poly OptionPlayground None constr
R4983:4998 Poly OptionPlayground <> mod
def 5011:5019 <> nth_error
R5037:5040 Poly <> list ind
R5042:5042 Poly <> X var
R5050:5052 Coq.Init.Datatypes <> nat ind
R5076:5081 Coq.Init.Datatypes <> option ind
R5083:5083 Poly <> X var
R5096:5096 Poly <> l var
R5107:5108 Poly <> :::'[]' not
R5113:5116 Coq.Init.Datatypes <> None constr
R5123:5126 Poly <> :::x_'::'_x not
R5137:5140 Basics <> ::nat_scope:x_'=?'_x not
R5136:5136 Poly <> n var
R5141:5141 Coq.Init.Datatypes <> O constr
R5160:5168 Poly <> nth_error def
R5174:5177 Coq.Init.Peano <> pred syndef
R5179:5179 Poly <> n var
R5148:5151 Coq.Init.Datatypes <> Some constr
def 5198:5212 <> test_nth_error1
R5237:5239 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5216:5224 Poly <> nth_error def
R5226:5226 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5228:5228 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5230:5230 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5232:5232 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5234:5234 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5240:5243 Coq.Init.Datatypes <> Some constr
def 5281:5295 <> test_nth_error2
R5320:5322 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5299:5307 Poly <> nth_error def
R5309:5309 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5313:5313 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5317:5317 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5310:5310 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5312:5312 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5314:5314 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5316:5316 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5323:5326 Coq.Init.Datatypes <> Some constr
R5328:5328 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5330:5330 Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 5366:5380 <> test_nth_error3
R5402:5404 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5384:5392 Poly <> nth_error def
R5394:5394 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5399:5399 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5395:5398 Basics <> true constr
R5405:5408 Coq.Init.Datatypes <> None constr
def 5472:5479 <> hd_error
R5497:5500 Poly <> list ind
R5502:5502 Poly <> X var
R5507:5512 Coq.Init.Datatypes <> option ind
R5514:5514 Poly <> X var
R5527:5527 Poly <> l var
R5538:5539 Poly <> :::'[]' not
R5544:5547 Coq.Init.Datatypes <> None constr
R5554:5557 Poly <> :::x_'::'_x not
R5563:5566 Coq.Init.Datatypes <> Some constr
def 5587:5600 <> test_hd_error1
R5618:5620 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5604:5611 Poly <> hd_error def
R5613:5613 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5615:5615 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5617:5617 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5621:5624 Coq.Init.Datatypes <> Some constr
def 5662:5675 <> test_hd_error2
R5698:5701 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5679:5686 Poly <> hd_error def
R5689:5689 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5693:5693 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5697:5697 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5690:5690 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5692:5692 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5694:5694 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5696:5696 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5702:5705 Coq.Init.Datatypes <> Some constr
R5707:5707 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5709:5709 Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 5771:5780 <> doit3times
R5795:5796 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5797:5797 Poly <> X var
R5794:5794 Poly <> X var
R5803:5803 Poly <> X var
R5808:5808 Poly <> X var
R5815:5815 Poly <> f var
R5818:5818 Poly <> f var
R5821:5821 Poly <> f var
R5823:5823 Poly <> n var
R5836:5845 Poly <> doit3times def
def 5917:5931 <> test_doit3times
R5955:5957 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5934:5943 Poly <> doit3times def
R5945:5952 Basics <> minustwo def
def 5996:6011 <> test_doit3times'
R6034:6036 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6014:6023 Poly <> doit3times def
R6030:6033 Basics <> true constr
R6025:6028 Basics <> negb def
R6037:6041 Basics <> false constr
def 6080:6085 <> filter
R6104:6105 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6106:6109 Basics <> bool ind
R6103:6103 Poly <> X var
R6115:6118 Poly <> list ind
R6120:6120 Poly <> X var
R6142:6145 Poly <> list ind
R6147:6147 Poly <> X var
R6161:6161 Poly <> l var
R6172:6173 Poly <> :::'[]' not
R6182:6183 Poly <> :::'[]' not
R6190:6193 Poly <> :::x_'::'_x not
R6202:6205 Poly <> test var
R6270:6275 Poly <> filter def
R6277:6280 Poly <> test var
R6215:6219 Poly <> :::x_'::'_x not
R6233:6233 Poly <> :::x_'::'_x not
R6220:6225 Poly <> filter def
R6227:6230 Poly <> test var
def 6300:6311 <> test_filter1
R6336:6338 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6314:6319 Poly <> filter def
R6327:6327 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6329:6329 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6331:6331 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6333:6333 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6335:6335 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6321:6325 Induction <> evenb def
R6339:6339 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6341:6341 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6343:6343 Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 6384:6394 <> length_is_1
R6412:6415 Poly <> list ind
R6417:6417 Poly <> X var
R6422:6425 Basics <> bool ind
R6432:6432 Basics <> ::nat_scope:x_'=?'_x not
R6441:6445 Basics <> ::nat_scope:x_'=?'_x not
R6433:6438 Poly <> length def
R6440:6440 Poly <> l var
def 6458:6469 <> test_filter2
R6544:6548 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6476:6481 Poly <> filter def
R6506:6507 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6514:6515 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6519:6520 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6524:6525 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6533:6534 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6537:6538 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6542:6543 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6508:6508 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6510:6511 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6513:6513 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6516:6516 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6518:6518 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6521:6521 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6523:6523 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6526:6526 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6528:6528 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6530:6530 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6532:6532 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6535:6536 Poly <> :::'[]' not
R6539:6539 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6541:6541 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6483:6493 Poly <> length_is_1 def
R6549:6550 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6554:6555 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6559:6560 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6564:6565 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6551:6551 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6553:6553 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6556:6556 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6558:6558 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6561:6561 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6563:6563 Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 6606:6621 <> countoddmembers'
R6626:6629 Poly <> list ind
R6631:6633 Coq.Init.Datatypes <> nat ind
R6638:6640 Coq.Init.Datatypes <> nat ind
R6647:6652 Poly <> length def
R6655:6660 Poly <> filter def
R6667:6667 Poly <> l var
R6662:6665 Induction <> oddb def
def 6680:6701 <> test_countoddmembers'1
R6736:6738 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6706:6721 Poly <> countoddmembers' def
R6723:6723 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6725:6725 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6727:6727 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6729:6729 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6731:6731 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6733:6733 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6735:6735 Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 6776:6797 <> test_countoddmembers'2
R6826:6828 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6802:6817 Poly <> countoddmembers' def
R6819:6819 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6821:6821 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6823:6823 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6825:6825 Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 6866:6887 <> test_countoddmembers'3
R6912:6914 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6892:6907 Poly <> countoddmembers' def
R6909:6911 Poly <> nil constr
def 6953:6966 <> test_anon_fun'
R7000:7002 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6971:6980 Poly <> doit3times def
R6993:6995 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R6992:6992 Poly <> n var
R6996:6996 Poly <> n var
def 7043:7055 <> test_filter2'
R7145:7149 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7062:7067 Poly <> filter def
R7107:7108 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7115:7116 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7120:7121 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7125:7126 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7134:7135 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7138:7139 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7143:7144 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7109:7109 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7111:7112 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7114:7114 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7117:7117 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7119:7119 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7122:7122 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7124:7124 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7127:7127 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7129:7129 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7131:7131 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7133:7133 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7136:7137 Poly <> :::'[]' not
R7140:7140 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7142:7142 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7079:7079 Basics <> ::nat_scope:x_'=?'_x not
R7088:7092 Basics <> ::nat_scope:x_'=?'_x not
R7080:7085 Poly <> length def
R7087:7087 Poly <> l var
R7150:7151 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7155:7156 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7160:7161 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7165:7166 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7152:7152 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7154:7154 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7157:7157 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7159:7159 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7162:7162 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7164:7164 Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 7231:7245 <> filter_even_gt7
R7252:7255 Poly <> list ind
R7257:7259 Coq.Init.Datatypes <> nat ind
R7264:7267 Poly <> list ind
R7269:7271 Coq.Init.Datatypes <> nat ind
R7278:7283 Poly <> filter def
R7328:7328 Poly <> l var
R7295:7298 Basics <> andb def
R7318:7322 Induction <> evenb def
R7324:7324 Poly <> n var
R7301:7304 Basics <> negb def
R7307:7309 Basics <> leb def
R7311:7311 Poly <> n var
def 7340:7361 <> test_filter_even_gt7_1
R7402:7404 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7367:7381 Poly <> filter_even_gt7 def
R7383:7383 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7385:7385 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7387:7387 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7389:7389 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7391:7391 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7394:7394 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7396:7396 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7399:7399 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7401:7401 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7405:7405 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7408:7408 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7411:7411 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7413:7413 Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 7450:7471 <> test_filter_even_gt7_2
R7507:7509 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7477:7491 Poly <> filter_even_gt7 def
R7493:7493 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7495:7495 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7497:7497 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7499:7499 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7502:7502 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7506:7506 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7510:7511 Poly <> :::'[]' not
def 7551:7559 <> partition
R7579:7582 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7583:7586 Basics <> bool ind
R7578:7578 Poly <> X var
R7593:7596 Poly <> list ind
R7598:7598 Poly <> X var
R7631:7633 Poly <> ::type_scope:x_'*'_x not
R7625:7628 Poly <> list ind
R7630:7630 Poly <> X var
R7634:7637 Poly <> list ind
R7639:7639 Poly <> X var
R7646:7646 Poly <> :::'('_x_','_x_')' not
R7660:7661 Poly <> :::'('_x_','_x_')' not
R7695:7695 Poly <> :::'('_x_','_x_')' not
R7647:7652 Poly <> filter def
R7659:7659 Poly <> l var
R7654:7657 Poly <> test var
R7662:7667 Poly <> filter def
R7694:7694 Poly <> l var
R7679:7682 Basics <> negb def
R7685:7688 Poly <> test var
R7690:7690 Poly <> e var
def 7707:7721 <> test_partition1
R7750:7752 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7724:7732 Poly <> partition def
R7739:7739 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7741:7741 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7743:7743 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7745:7745 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7747:7747 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7749:7749 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7734:7737 Induction <> oddb def
R7753:7753 Poly <> :::'('_x_','_x_')' not
R7761:7762 Poly <> :::'('_x_','_x_')' not
R7768:7768 Poly <> :::'('_x_','_x_')' not
R7754:7754 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7756:7756 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7758:7758 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7760:7760 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7763:7763 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7765:7765 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7767:7767 Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 7804:7818 <> test_partition2
R7855:7857 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7821:7829 Poly <> partition def
R7848:7848 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7850:7850 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7852:7852 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7854:7854 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7841:7845 Basics <> false constr
R7858:7858 Poly <> :::'('_x_','_x_')' not
R7861:7862 Poly <> :::'('_x_','_x_')' not
R7870:7870 Poly <> :::'('_x_','_x_')' not
R7859:7860 Poly <> :::'[]' not
R7863:7863 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7865:7865 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7867:7867 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R7869:7869 Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 7929:7931 <> map
R7950:7953 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7954:7954 Poly <> Y var
R7949:7949 Poly <> X var
R7961:7964 Poly <> list ind
R7966:7966 Poly <> X var
R7971:7974 Poly <> list ind
R7976:7976 Poly <> Y var
R7989:7989 Poly <> l var
R8000:8001 Poly <> :::'[]' not
R8006:8007 Poly <> :::'[]' not
R8014:8017 Poly <> :::x_'::'_x not
R8023:8023 Poly <> :::x_'::'_x not
R8027:8032 Poly <> :::x_'::'_x not
R8040:8040 Poly <> :::x_'::'_x not
R8024:8024 Poly <> f var
R8033:8035 Poly <> map def
R8037:8037 Poly <> f var
def 8058:8066 <> test_map1
R8100:8102 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8069:8071 Poly <> map def
R8093:8093 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8095:8095 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8097:8097 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8099:8099 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8083:8086 Coq.Init.Peano <> plus syndef
R8090:8090 Poly <> x var
R8103:8103 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8105:8105 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8107:8107 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8109:8109 Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 8147:8155 <> test_map2
R8178:8180 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8160:8162 Poly <> map def
R8169:8169 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8171:8171 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8173:8173 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8175:8175 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8177:8177 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8164:8167 Induction <> oddb def
R8181:8181 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8187:8187 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8192:8192 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8198:8198 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8203:8203 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8182:8186 Basics <> false constr
R8188:8191 Basics <> true constr
R8193:8197 Basics <> false constr
R8199:8202 Basics <> true constr
def 8241:8249 <> test_map3
R8297:8301 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8256:8258 Poly <> map def
R8288:8288 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8290:8290 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8292:8292 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8294:8294 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8296:8296 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8270:8270 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8278:8278 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8285:8285 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8271:8275 Induction <> evenb def
R8277:8277 Poly <> n var
R8279:8282 Induction <> oddb def
R8284:8284 Poly <> n var
R8302:8302 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8315:8315 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8328:8328 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8341:8341 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8354:8354 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8303:8303 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8308:8308 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8314:8314 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8304:8307 Basics <> true constr
R8309:8313 Basics <> false constr
R8316:8316 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8322:8322 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8327:8327 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8317:8321 Basics <> false constr
R8323:8326 Basics <> true constr
R8329:8329 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8334:8334 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8340:8340 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8330:8333 Basics <> true constr
R8335:8339 Basics <> false constr
R8342:8342 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8348:8348 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8353:8353 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8343:8347 Basics <> false constr
R8349:8352 Basics <> true constr
prf 8413:8425 <> map_app_distr
R8454:8457 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8458:8458 Poly <> Y var
R8453:8453 Poly <> X var
R8469:8472 Poly <> list ind
R8474:8474 Poly <> X var
R8496:8498 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8480:8482 Poly <> map def
R8489:8492 Poly <> :::x_'++'_x not
R8487:8488 Poly <> l1 var
R8493:8494 Poly <> l2 var
R8484:8484 Poly <> f var
R8507:8510 Poly <> :::x_'++'_x not
R8499:8501 Poly <> map def
R8505:8506 Poly <> l1 var
R8503:8503 Poly <> f var
R8511:8513 Poly <> map def
R8517:8518 Poly <> l2 var
R8515:8515 Poly <> f var
prf 8665:8671 <> map_rev
R8700:8703 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8704:8704 Poly <> Y var
R8699:8699 Poly <> X var
R8711:8714 Poly <> list ind
R8716:8716 Poly <> X var
R8735:8737 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8722:8724 Poly <> map def
R8729:8731 Poly <> rev def
R8733:8733 Poly <> l var
R8726:8726 Poly <> f var
R8738:8740 Poly <> rev def
R8743:8745 Poly <> map def
R8749:8749 Poly <> l var
R8747:8747 Poly <> f var
R8854:8866 Poly <> map_app_distr thm
R8854:8866 Poly <> map_app_distr thm
R8854:8866 Poly <> map_app_distr thm
def 8914:8921 <> flat_map
R8940:8943 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8944:8947 Poly <> list ind
R8949:8949 Poly <> Y var
R8939:8939 Poly <> X var
R8956:8959 Poly <> list ind
R8961:8961 Poly <> X var
R8966:8969 Poly <> list ind
R8971:8971 Poly <> Y var
R8984:8984 Poly <> l var
R8995:8996 Poly <> :::'[]' not
R9001:9002 Poly <> :::'[]' not
R9009:9012 Poly <> :::x_'::'_x not
R9018:9018 Poly <> :::x_'++'_x not
R9022:9027 Poly <> :::x_'++'_x not
R9040:9040 Poly <> :::x_'++'_x not
R9019:9019 Poly <> f var
R9028:9035 Poly <> flat_map def
R9037:9037 Poly <> f var
def 9058:9071 <> test_flat_map1
R9111:9115 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9076:9083 Poly <> flat_map def
R9104:9104 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9106:9106 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9108:9108 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9110:9110 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9095:9095 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9097:9097 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9099:9099 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9101:9101 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9096:9096 Poly <> n var
R9098:9098 Poly <> n var
R9100:9100 Poly <> n var
R9116:9116 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9118:9119 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9121:9122 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9124:9125 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9127:9128 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9130:9131 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9133:9134 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9136:9137 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9139:9140 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9142:9142 Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 9203:9212 <> option_map
R9231:9234 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9235:9235 Poly <> Y var
R9230:9230 Poly <> X var
R9243:9248 Coq.Init.Datatypes <> option ind
R9250:9250 Poly <> X var
R9255:9260 Coq.Init.Datatypes <> option ind
R9262:9262 Poly <> Y var
R9275:9276 Poly <> xo var
R9287:9290 Coq.Init.Datatypes <> None constr
R9295:9298 Coq.Init.Datatypes <> None constr
R9304:9307 Coq.Init.Datatypes <> Some constr
R9314:9317 Coq.Init.Datatypes <> Some constr
R9320:9320 Poly <> f var
def 9342:9345 <> fold
R9364:9367 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9369:9372 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9373:9373 Poly <> Y var
R9368:9368 Poly <> Y var
R9363:9363 Poly <> X var
R9380:9383 Poly <> list ind
R9385:9385 Poly <> X var
R9392:9392 Poly <> Y var
R9397:9397 Poly <> Y var
R9410:9410 Poly <> l var
R9421:9423 Poly <> nil constr
R9428:9428 Poly <> b var
R9435:9438 Poly <> :::x_'::'_x not
R9444:9444 Poly <> f var
R9449:9452 Poly <> fold def
R9458:9458 Poly <> b var
R9454:9454 Poly <> f var
def 9477:9489 <> fold_example1
R9516:9518 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9495:9498 Poly <> fold def
R9505:9505 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9507:9507 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9509:9509 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9511:9511 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9513:9513 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9500:9503 Coq.Init.Peano <> mult syndef
def 9557:9569 <> fold_example2
R9612:9614 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9575:9578 Poly <> fold def
R9608:9611 Basics <> true constr
R9585:9585 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9590:9590 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9595:9595 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9601:9601 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9606:9606 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9586:9589 Basics <> true constr
R9591:9594 Basics <> true constr
R9596:9600 Basics <> false constr
R9602:9605 Basics <> true constr
R9580:9583 Basics <> andb def
R9615:9619 Basics <> false constr
def 9656:9668 <> fold_example3
R9705:9707 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9674:9677 Poly <> fold def
R9703:9704 Poly <> :::'[]' not
R9684:9684 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9688:9688 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9691:9691 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9697:9697 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9701:9701 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9685:9685 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9687:9687 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9689:9690 Poly <> :::'[]' not
R9692:9692 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9694:9694 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9696:9696 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9698:9698 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9700:9700 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9679:9681 Poly <> app def
R9708:9708 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9710:9710 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9712:9712 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9714:9714 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9716:9716 Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 9756:9763 <> constfun
R9779:9779 Poly <> X var
R9787:9790 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9791:9791 Poly <> X var
R9784:9786 Coq.Init.Datatypes <> nat ind
R9806:9808 Coq.Init.Datatypes <> nat ind
R9814:9814 Poly <> x var
def 9829:9833 <> ftrue
R9838:9845 Poly <> constfun def
R9847:9850 Basics <> true constr
def 9862:9878 <> constfun_example1
R9889:9891 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9882:9886 Poly <> ftrue def
R9892:9895 Basics <> true constr
def 9932:9948 <> constfun_example2
R9967:9969 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9953:9960 Poly <> constfun def
R10005:10008 Coq.Init.Peano <> plus syndef
def 10023:10027 <> plus3
R10032:10035 Coq.Init.Peano <> plus syndef
R10046:10050 Poly <> plus3 def
def 10062:10071 <> test_plus3
R10085:10087 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10078:10082 Poly <> plus3 def
def 10125:10135 <> test_plus3'
R10159:10161 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10141:10150 Poly <> doit3times def
R10152:10156 Poly <> plus3 def
def 10199:10210 <> test_plus3''
R10236:10238 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10215:10224 Poly <> doit3times def
R10227:10230 Coq.Init.Peano <> plus syndef
mod 10276:10284 <> Exercises
def 10299:10309 Exercises fold_length
R10325:10328 Poly <> list ind
R10330:10330 Poly <> X var
R10335:10337 Coq.Init.Datatypes <> nat ind
R10344:10347 Poly <> fold def
R10366:10366 Poly <> l var
R10361:10361 Coq.Init.Datatypes <> S constr
R10363:10363 Poly <> n var
prf 10380:10398 Exercises fold_length_correct
R10416:10419 Poly <> list ind
R10421:10421 Poly <> X var
R10440:10442 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10427:10437 Poly Exercises fold_length def
R10439:10439 Poly <> l var
R10443:10448 Poly <> length def
R10450:10450 Poly <> l var
R10532:10542 Poly Exercises fold_length def
R10564:10574 Poly Exercises fold_length def
def 10632:10639 Exercises fold_map
R10658:10661 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10662:10662 Poly <> Y var
R10657:10657 Poly <> X var
R10669:10672 Poly <> list ind
R10674:10674 Poly <> X var
R10679:10682 Poly <> list ind
R10684:10684 Poly <> Y var
R10691:10694 Poly <> fold def
R10720:10721 Poly <> :::'[]' not
R10718:10718 Poly <> l var
R10706:10709 Poly <> cons constr
R10712:10712 Poly <> f var
R10714:10714 Poly <> e var
def 10733:10745 Exercises test_foldmap1
R10784:10786 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10748:10755 Poly Exercises fold_map def
R10777:10777 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R10779:10779 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R10781:10781 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R10783:10783 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R10767:10770 Coq.Init.Peano <> plus syndef
R10774:10774 Poly <> x var
R10787:10787 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R10789:10789 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R10791:10791 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R10793:10793 Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 10831:10843 Exercises test_foldmap2
R10871:10873 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10848:10855 Poly Exercises fold_map def
R10862:10862 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R10864:10864 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R10866:10866 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R10868:10868 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R10870:10870 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R10857:10860 Induction <> oddb def
R10874:10874 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R10880:10880 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R10885:10885 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R10891:10891 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R10896:10896 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R10875:10879 Basics <> false constr
R10881:10884 Basics <> true constr
R10886:10890 Basics <> false constr
R10892:10895 Basics <> true constr
def 10934:10946 Exercises test_foldmap3
R10999:11003 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10953:10960 Poly Exercises fold_map def
R10990:10990 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R10992:10992 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R10994:10994 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R10996:10996 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R10998:10998 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R10972:10972 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R10980:10980 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R10987:10987 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R10973:10977 Induction <> evenb def
R10979:10979 Poly <> n var
R10981:10984 Induction <> oddb def
R10986:10986 Poly <> n var
R11004:11004 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R11017:11017 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R11030:11030 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R11043:11043 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R11056:11056 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R11005:11005 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R11010:11010 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R11016:11016 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R11006:11009 Basics <> true constr
R11011:11015 Basics <> false constr
R11018:11018 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R11024:11024 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R11029:11029 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R11019:11023 Basics <> false constr
R11025:11028 Basics <> true constr
R11031:11031 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R11036:11036 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R11042:11042 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R11032:11035 Basics <> true constr
R11037:11041 Basics <> false constr
R11044:11044 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R11050:11050 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R11055:11055 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R11045:11049 Basics <> false constr
R11051:11054 Basics <> true constr
prf 11094:11109 Exercises fold_map_correct
R11138:11141 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11142:11142 Poly <> Y var
R11137:11137 Poly <> X var
R11149:11152 Poly <> list ind
R11154:11154 Poly <> X var
R11172:11174 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11160:11167 Poly Exercises fold_map def
R11171:11171 Poly <> l var
R11169:11169 Poly <> f var
R11175:11177 Poly <> map def
R11181:11181 Poly <> l var
R11179:11179 Poly <> f var
R11267:11274 Poly Exercises fold_map def
R11284:11291 Poly Exercises fold_map def
def 11360:11369 Exercises prod_curry
R11396:11399 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11400:11400 Poly <> Z var
R11392:11394 Poly <> ::type_scope:x_'*'_x not
R11391:11391 Poly <> X var
R11395:11395 Poly <> Y var
R11407:11407 Poly <> X var
R11414:11414 Poly <> Y var
R11419:11419 Poly <> Z var
R11424:11424 Poly <> f var
R11426:11426 Poly <> :::'('_x_','_x_')' not
R11428:11429 Poly <> :::'('_x_','_x_')' not
R11431:11431 Poly <> :::'('_x_','_x_')' not
R11427:11427 Poly <> x var
R11430:11430 Poly <> y var
def 11446:11457 Exercises prod_uncurry
R11480:11483 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11485:11488 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11489:11489 Poly <> Z var
R11484:11484 Poly <> Y var
R11479:11479 Poly <> X var
R11497:11499 Poly <> ::type_scope:x_'*'_x not
R11496:11496 Poly <> X var
R11500:11500 Poly <> Y var
R11505:11505 Poly <> Z var
R11510:11510 Poly <> f var
R11521:11523 Poly <> snd def
R11525:11525 Poly <> p var
R11513:11515 Poly <> fst def
R11517:11517 Poly <> p var
prf 11538:11550 Exercises uncurry_curry
R11581:11584 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11586:11589 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11590:11590 Poly <> Z var
R11585:11585 Poly <> Y var
R11580:11580 Poly <> X var
R11597:11597 Poly <> X var
R11604:11604 Poly <> Y var
R11641:11643 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11610:11619 Poly Exercises prod_curry def
R11640:11640 Poly <> y var
R11638:11638 Poly <> x var
R11622:11633 Poly Exercises prod_uncurry def
R11635:11635 Poly <> f var
R11644:11644 Poly <> f var
R11648:11648 Poly <> y var
R11646:11646 Poly <> x var
R11689:11700 Poly Exercises prod_uncurry def
R11703:11712 Poly Exercises prod_curry def
prf 11740:11762 Exercises surjective_pairing_poly
R11791:11793 Poly <> ::type_scope:x_'*'_x not
R11790:11790 Poly <> X var
R11794:11794 Poly <> Y var
R11801:11803 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11800:11800 Poly <> p var
R11804:11804 Poly <> :::'('_x_','_x_')' not
R11810:11811 Poly <> :::'('_x_','_x_')' not
R11817:11817 Poly <> :::'('_x_','_x_')' not
R11805:11807 Poly <> fst def
R11809:11809 Poly <> p var
R11812:11814 Poly <> snd def
R11816:11816 Poly <> p var
prf 11894:11906 Exercises curry_uncurry
R11936:11936 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11942:11946 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11947:11947 Poly <> Z var
R11938:11940 Poly <> ::type_scope:x_'*'_x not
R11937:11937 Poly <> X var
R11941:11941 Poly <> Y var
R11955:11957 Poly <> ::type_scope:x_'*'_x not
R11954:11954 Poly <> X var
R11958:11958 Poly <> Y var
R11993:11995 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11964:11975 Poly Exercises prod_uncurry def
R11992:11992 Poly <> p var
R11978:11987 Poly Exercises prod_curry def
R11989:11989 Poly <> f var
R11996:11996 Poly <> f var
R11998:11998 Poly <> p var
R12037:12048 Poly Exercises prod_uncurry def
R12051:12060 Poly Exercises prod_curry def
R12077:12099 Poly Exercises surjective_pairing_poly thm
R12077:12099 Poly Exercises surjective_pairing_poly thm
R12077:12099 Poly Exercises surjective_pairing_poly thm
R12129:12137 Poly Exercises <> mod
