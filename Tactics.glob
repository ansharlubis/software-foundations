DIGEST aacdc6cd88f6a627c6f92a5d7946bee2
FTactics
R126:129 Poly <> <> lib
R147:151 Lists <> <> lib
prf 163:168 <> silly1
R187:189 Coq.Init.Datatypes <> nat ind
R199:202 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R216:219 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R225:227 Coq.Init.Logic <> ::type_scope:x_'='_x not
R220:220 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R222:222 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R224:224 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R221:221 Tactics <> n var
R223:223 Tactics <> o var
R228:228 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R230:230 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R232:232 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R229:229 Tactics <> m var
R231:231 Tactics <> p var
R208:210 Coq.Init.Logic <> ::type_scope:x_'='_x not
R203:203 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R205:205 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R207:207 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R204:204 Tactics <> n var
R206:206 Tactics <> o var
R211:211 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R213:213 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R215:215 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R212:212 Tactics <> n var
R214:214 Tactics <> p var
R195:197 Coq.Init.Logic <> ::type_scope:x_'='_x not
R194:194 Tactics <> n var
R198:198 Tactics <> m var
prf 321:327 <> silly1'
R346:348 Coq.Init.Datatypes <> nat ind
R358:361 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R375:378 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R384:386 Coq.Init.Logic <> ::type_scope:x_'='_x not
R379:379 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R381:381 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R383:383 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R380:380 Tactics <> n var
R382:382 Tactics <> o var
R387:387 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R389:389 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R391:391 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R388:388 Tactics <> m var
R390:390 Tactics <> p var
R367:369 Coq.Init.Logic <> ::type_scope:x_'='_x not
R362:362 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R364:364 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R366:366 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R363:363 Tactics <> n var
R365:365 Tactics <> o var
R370:370 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R372:372 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R374:374 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R371:371 Tactics <> n var
R373:373 Tactics <> p var
R354:356 Coq.Init.Logic <> ::type_scope:x_'='_x not
R353:353 Tactics <> n var
R357:357 Tactics <> m var
prf 470:475 <> silly2
R494:496 Coq.Init.Datatypes <> nat ind
R506:511 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R512:512 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R552:558 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R564:566 Coq.Init.Logic <> ::type_scope:x_'='_x not
R559:559 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R561:561 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R563:563 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R560:560 Tactics <> n var
R562:562 Tactics <> o var
R567:567 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R569:569 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R571:571 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R568:568 Tactics <> m var
R570:570 Tactics <> p var
R525:527 Coq.Init.Datatypes <> nat ind
R535:538 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R544:546 Coq.Init.Logic <> ::type_scope:x_'='_x not
R539:539 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R541:541 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R543:543 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R540:540 Tactics <> q var
R542:542 Tactics <> o var
R547:547 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R549:549 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R551:551 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R548:548 Tactics <> r var
R550:550 Tactics <> p var
R531:533 Coq.Init.Logic <> ::type_scope:x_'='_x not
R530:530 Tactics <> q var
R534:534 Tactics <> r var
R502:504 Coq.Init.Logic <> ::type_scope:x_'='_x not
R501:501 Tactics <> n var
R505:505 Tactics <> m var
prf 639:645 <> silly2a
R660:662 Coq.Init.Datatypes <> nat ind
R680:685 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R686:686 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R730:736 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R740:742 Coq.Init.Logic <> ::type_scope:x_'='_x not
R737:737 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R739:739 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R738:738 Tactics <> n var
R743:743 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R745:745 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R744:744 Tactics <> m var
R699:701 Coq.Init.Datatypes <> nat ind
R717:720 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R724:726 Coq.Init.Logic <> ::type_scope:x_'='_x not
R721:721 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R723:723 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R722:722 Tactics <> q var
R727:727 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R729:729 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R728:728 Tactics <> r var
R709:711 Coq.Init.Logic <> ::type_scope:x_'='_x not
R704:704 Poly <> :::'('_x_','_x_')' not
R706:706 Poly <> :::'('_x_','_x_')' not
R708:708 Poly <> :::'('_x_','_x_')' not
R705:705 Tactics <> q var
R707:707 Tactics <> q var
R712:712 Poly <> :::'('_x_','_x_')' not
R714:714 Poly <> :::'('_x_','_x_')' not
R716:716 Poly <> :::'('_x_','_x_')' not
R713:713 Tactics <> r var
R715:715 Tactics <> r var
R672:674 Coq.Init.Logic <> ::type_scope:x_'='_x not
R667:667 Poly <> :::'('_x_','_x_')' not
R669:669 Poly <> :::'('_x_','_x_')' not
R671:671 Poly <> :::'('_x_','_x_')' not
R668:668 Tactics <> n var
R670:670 Tactics <> n var
R675:675 Poly <> :::'('_x_','_x_')' not
R677:677 Poly <> :::'('_x_','_x_')' not
R679:679 Poly <> :::'('_x_','_x_')' not
R676:676 Tactics <> m var
R678:678 Tactics <> m var
prf 833:840 <> silly_ex
R845:845 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R896:902 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R916:919 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R927:929 Coq.Init.Logic <> ::type_scope:x_'='_x not
R920:924 Induction <> evenb def
R930:933 Basics <> true constr
R909:911 Coq.Init.Logic <> ::type_scope:x_'='_x not
R903:906 Induction <> oddb def
R912:915 Basics <> true constr
R856:858 Coq.Init.Datatypes <> nat ind
R875:878 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R889:891 Coq.Init.Logic <> ::type_scope:x_'='_x not
R879:882 Induction <> oddb def
R885:885 Coq.Init.Datatypes <> S constr
R887:887 Tactics <> n var
R892:895 Basics <> true constr
R868:870 Coq.Init.Logic <> ::type_scope:x_'='_x not
R861:865 Induction <> evenb def
R867:867 Tactics <> n var
R871:874 Basics <> true constr
prf 1007:1021 <> silly3_firsttry
R1034:1036 Coq.Init.Datatypes <> nat ind
R1056:1059 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1074:1076 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1060:1060 Basics <> ::nat_scope:x_'=?'_x not
R1068:1072 Basics <> ::nat_scope:x_'=?'_x not
R1061:1061 Coq.Init.Datatypes <> S constr
R1064:1064 Coq.Init.Datatypes <> S constr
R1066:1066 Tactics <> n var
R1077:1080 Basics <> true constr
R1045:1048 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1055:1055 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1041:1044 Basics <> true constr
R1050:1053 Basics <> ::nat_scope:x_'=?'_x not
R1049:1049 Tactics <> n var
prf 1164:1175 <> rev_exercise
R1192:1195 Poly <> list ind
R1197:1199 Coq.Init.Datatypes <> nat ind
R1215:1218 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1221:1223 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1219:1220 Tactics <> l2 var
R1224:1226 Poly <> rev def
R1228:1229 Tactics <> l1 var
R1206:1208 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1204:1205 Tactics <> l1 var
R1209:1211 Poly <> rev def
R1213:1214 Tactics <> l2 var
R1294:1307 Poly <> rev_involutive thm
R1294:1307 Poly <> rev_involutive thm
def 1345:1360 <> trans_eq_example
R1383:1385 Coq.Init.Datatypes <> nat ind
R1403:1409 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1423:1428 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1434:1436 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1429:1429 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1431:1431 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1433:1433 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1430:1430 Tactics <> a var
R1432:1432 Tactics <> b var
R1437:1437 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1439:1439 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1441:1441 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1438:1438 Tactics <> e var
R1440:1440 Tactics <> f var
R1415:1417 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1410:1410 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1412:1412 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1414:1414 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1411:1411 Tactics <> c var
R1413:1413 Tactics <> d var
R1418:1418 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1420:1420 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1422:1422 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1419:1419 Tactics <> e var
R1421:1421 Tactics <> f var
R1395:1397 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1390:1390 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1392:1392 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1394:1394 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1391:1391 Tactics <> a var
R1393:1393 Tactics <> b var
R1398:1398 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1400:1400 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1402:1402 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1399:1399 Tactics <> c var
R1401:1401 Tactics <> d var
prf 1532:1539 <> trans_eq
R1567:1567 Tactics <> X var
R1578:1581 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1587:1590 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1592:1594 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1591:1591 Tactics <> n var
R1595:1595 Tactics <> o var
R1583:1585 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1582:1582 Tactics <> m var
R1586:1586 Tactics <> o var
R1574:1576 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1573:1573 Tactics <> n var
R1577:1577 Tactics <> m var
def 1679:1695 <> trans_eq_example'
R1718:1720 Coq.Init.Datatypes <> nat ind
R1738:1743 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1757:1762 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1768:1770 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1763:1763 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1765:1765 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1767:1767 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1764:1764 Tactics <> a var
R1766:1766 Tactics <> b var
R1771:1771 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1773:1773 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1775:1775 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1772:1772 Tactics <> e var
R1774:1774 Tactics <> f var
R1749:1751 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1744:1744 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1746:1746 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1748:1748 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1745:1745 Tactics <> c var
R1747:1747 Tactics <> d var
R1752:1752 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1754:1754 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1756:1756 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1753:1753 Tactics <> e var
R1755:1755 Tactics <> f var
R1730:1732 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1725:1725 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1727:1727 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1729:1729 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1726:1726 Tactics <> a var
R1728:1728 Tactics <> b var
R1733:1733 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1735:1735 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1737:1737 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1734:1734 Tactics <> c var
R1736:1736 Tactics <> d var
R1842:1842 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1844:1844 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1846:1846 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1824:1831 Tactics <> trans_eq thm
R1842:1842 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1844:1844 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1846:1846 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1824:1831 Tactics <> trans_eq thm
def 1918:1934 <> trans_eq_exercise
R1955:1957 Coq.Init.Datatypes <> nat ind
R1978:1983 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1995:2000 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2001:2001 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2007:2011 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2022:2022 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2003:2005 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R2002:2002 Tactics <> n var
R2006:2006 Tactics <> p var
R2012:2019 Basics <> minustwo def
R2021:2021 Tactics <> o var
R1984:1984 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1990:1993 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1986:1988 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R1985:1985 Tactics <> n var
R1989:1989 Tactics <> p var
R1994:1994 Tactics <> m var
R1963:1966 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1977:1977 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1962:1962 Tactics <> m var
R1967:1974 Basics <> minustwo def
R1976:1976 Tactics <> o var
R2066:2073 Tactics <> trans_eq thm
R2066:2073 Tactics <> trans_eq thm
prf 2153:2163 <> S_injective
R2178:2180 Coq.Init.Datatypes <> nat ind
R2194:2197 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2199:2201 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2198:2198 Tactics <> n var
R2202:2202 Tactics <> m var
R2188:2190 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2185:2185 Coq.Init.Datatypes <> S constr
R2187:2187 Tactics <> n var
R2191:2191 Coq.Init.Datatypes <> S constr
R2193:2193 Tactics <> m var
R2244:2246 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2247:2250 Coq.Init.Peano <> pred syndef
R2253:2253 Coq.Init.Datatypes <> S constr
R2244:2246 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2247:2250 Coq.Init.Peano <> pred syndef
R2253:2253 Coq.Init.Datatypes <> S constr
prf 2334:2345 <> S_injective'
R2360:2362 Coq.Init.Datatypes <> nat ind
R2376:2379 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2381:2383 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2380:2380 Tactics <> n var
R2384:2384 Tactics <> m var
R2370:2372 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2367:2367 Coq.Init.Datatypes <> S constr
R2369:2369 Tactics <> n var
R2373:2373 Coq.Init.Datatypes <> S constr
R2375:2375 Tactics <> m var
prf 2462:2474 <> injection_ex1
R2493:2495 Coq.Init.Datatypes <> nat ind
R2513:2516 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2518:2520 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2517:2517 Tactics <> n var
R2521:2521 Tactics <> m var
R2505:2507 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2500:2500 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2502:2502 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2504:2504 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2501:2501 Tactics <> n var
R2503:2503 Tactics <> m var
R2508:2508 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2510:2510 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2512:2512 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2509:2509 Tactics <> o var
R2511:2511 Tactics <> o var
prf 2623:2635 <> injection_ex2
R2652:2654 Coq.Init.Datatypes <> nat ind
R2668:2671 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2673:2675 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2672:2672 Tactics <> n var
R2676:2676 Tactics <> m var
R2662:2664 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2659:2659 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2661:2661 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2660:2660 Tactics <> n var
R2665:2665 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2667:2667 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2666:2666 Tactics <> m var
def 2773:2785 <> injection_ex3
R2813:2813 Tactics <> X var
R2822:2825 Poly <> list ind
R2827:2827 Tactics <> X var
R2853:2858 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2874:2879 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2881:2883 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2880:2880 Tactics <> x var
R2884:2884 Tactics <> y var
R2865:2867 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2860:2863 Poly <> :::x_'::'_x not
R2859:2859 Tactics <> y var
R2864:2864 Tactics <> l var
R2869:2872 Poly <> :::x_'::'_x not
R2868:2868 Tactics <> x var
R2873:2873 Tactics <> j var
R2844:2846 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2834:2837 Poly <> :::x_'::'_x not
R2833:2833 Tactics <> x var
R2839:2842 Poly <> :::x_'::'_x not
R2838:2838 Tactics <> y var
R2843:2843 Tactics <> l var
R2848:2851 Poly <> :::x_'::'_x not
R2847:2847 Tactics <> z var
R2852:2852 Tactics <> j var
prf 3020:3026 <> eqb_0_l
R3039:3041 Coq.Init.Datatypes <> nat ind
R3059:3062 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3064:3066 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3063:3063 Tactics <> n var
R3052:3054 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3047:3050 Basics <> ::nat_scope:x_'=?'_x not
R3051:3051 Tactics <> n var
R3055:3058 Basics <> true constr
prf 3197:3212 <> discriminate_ex1
R3225:3227 Coq.Init.Datatypes <> nat ind
R3239:3242 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3248:3250 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3244:3246 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R3235:3237 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3232:3232 Coq.Init.Datatypes <> S constr
R3234:3234 Tactics <> n var
R3238:3238 Coq.Init.Datatypes <> O constr
prf 3315:3330 <> discriminate_ex2
R3345:3347 Coq.Init.Datatypes <> nat ind
R3364:3367 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3371:3373 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3368:3368 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R3370:3370 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R3369:3369 Tactics <> n var
R3374:3374 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R3376:3376 Poly <> :::'['_x_';'_'..'_';'_x_']' not
R3375:3375 Tactics <> m var
R3357:3359 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3352:3356 Basics <> false constr
R3360:3363 Basics <> true constr
def 3466:3481 <> discriminate_ex3
R3511:3511 Tactics <> X var
R3520:3523 Poly <> list ind
R3525:3525 Tactics <> X var
R3547:3550 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3552:3554 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3551:3551 Tactics <> x var
R3555:3555 Tactics <> z var
R3542:3544 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3532:3535 Poly <> :::x_'::'_x not
R3531:3531 Tactics <> x var
R3537:3540 Poly <> :::x_'::'_x not
R3536:3536 Tactics <> y var
R3541:3541 Tactics <> l var
R3545:3546 Poly <> :::'[]' not
prf 3650:3656 <> f_equal
R3685:3688 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3689:3689 Tactics <> B var
R3684:3684 Tactics <> A var
R3698:3698 Tactics <> A var
R3709:3712 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3716:3718 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3713:3713 Tactics <> f var
R3715:3715 Tactics <> x var
R3719:3719 Tactics <> f var
R3721:3721 Tactics <> y var
R3705:3707 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3704:3704 Tactics <> x var
R3708:3708 Tactics <> y var
prf 3795:3799 <> S_inj
R3815:3817 Coq.Init.Datatypes <> nat ind
R3824:3827 Basics <> bool ind
R3851:3854 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3861:3863 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3856:3859 Basics <> ::nat_scope:x_'=?'_x not
R3855:3855 Tactics <> n var
R3860:3860 Tactics <> m var
R3864:3864 Tactics <> b var
R3847:3849 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3833:3833 Basics <> ::nat_scope:x_'=?'_x not
R3837:3842 Basics <> ::nat_scope:x_'=?'_x not
R3846:3846 Basics <> ::nat_scope:x_'=?'_x not
R3834:3834 Coq.Init.Datatypes <> S constr
R3836:3836 Tactics <> n var
R3843:3843 Coq.Init.Datatypes <> S constr
R3845:3845 Tactics <> m var
R3850:3850 Tactics <> b var
prf 3927:3933 <> silly3'
R3946:3948 Coq.Init.Datatypes <> nat ind
R3953:3953 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3992:3998 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4014:4019 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4024:4027 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4042:4042 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4020:4023 Basics <> true constr
R4028:4028 Basics <> ::nat_scope:x_'=?'_x not
R4036:4040 Basics <> ::nat_scope:x_'=?'_x not
R4029:4029 Coq.Init.Datatypes <> S constr
R4032:4032 Coq.Init.Datatypes <> S constr
R4034:4034 Tactics <> n var
R4003:4006 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4013:4013 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3999:4002 Basics <> true constr
R4008:4011 Basics <> ::nat_scope:x_'=?'_x not
R4007:4007 Tactics <> n var
R3967:3970 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3985:3987 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3971:3971 Basics <> ::nat_scope:x_'=?'_x not
R3979:3983 Basics <> ::nat_scope:x_'=?'_x not
R3972:3972 Coq.Init.Datatypes <> S constr
R3975:3975 Coq.Init.Datatypes <> S constr
R3977:3977 Tactics <> n var
R3988:3991 Basics <> true constr
R3960:3962 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3955:3958 Basics <> ::nat_scope:x_'=?'_x not
R3954:3954 Tactics <> n var
R3963:3966 Basics <> true constr
prf 4139:4156 <> plus_n_n_injective
R4173:4175 Coq.Init.Datatypes <> nat ind
R4191:4194 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4196:4198 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4195:4195 Tactics <> n var
R4199:4199 Tactics <> m var
R4183:4185 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4179:4181 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R4178:4178 Tactics <> n var
R4182:4182 Tactics <> n var
R4187:4189 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R4186:4186 Tactics <> m var
R4190:4190 Tactics <> m var
R4417:4425 Induction <> plus_n_Sm thm
R4417:4425 Induction <> plus_n_Sm thm
R4417:4425 Induction <> plus_n_Sm thm
R4445:4453 Induction <> plus_n_Sm thm
R4445:4453 Induction <> plus_n_Sm thm
R4445:4453 Induction <> plus_n_Sm thm
R4474:4484 Tactics <> S_injective thm
R4474:4484 Tactics <> S_injective thm
R4518:4528 Tactics <> S_injective thm
R4518:4528 Tactics <> S_injective thm
prf 4606:4628 <> double_injective_FAILED
R4645:4647 Coq.Init.Datatypes <> nat ind
R4669:4672 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4674:4676 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4673:4673 Tactics <> n var
R4677:4677 Tactics <> m var
R4658:4660 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4650:4655 Induction <> double def
R4657:4657 Tactics <> n var
R4661:4666 Induction <> double def
R4668:4668 Tactics <> m var
R4894:4900 Tactics <> f_equal thm
R4894:4900 Tactics <> f_equal thm
prf 4919:4934 <> double_injective
R4951:4953 Coq.Init.Datatypes <> nat ind
R4975:4978 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4980:4982 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4979:4979 Tactics <> n var
R4983:4983 Tactics <> m var
R4964:4966 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4956:4961 Induction <> double def
R4963:4963 Tactics <> n var
R4967:4972 Induction <> double def
R4974:4974 Tactics <> m var
R5215:5221 Tactics <> f_equal thm
R5215:5221 Tactics <> f_equal thm
prf 5327:5334 <> eqb_true
R5349:5351 Coq.Init.Datatypes <> nat ind
R5369:5372 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5374:5376 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5373:5373 Tactics <> n var
R5377:5377 Tactics <> m var
R5362:5364 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5357:5360 Basics <> ::nat_scope:x_'=?'_x not
R5356:5356 Tactics <> n var
R5361:5361 Tactics <> m var
R5365:5368 Basics <> true constr
R5606:5612 Tactics <> f_equal thm
R5606:5612 Tactics <> f_equal thm
prf 5654:5682 <> double_injective_take2_FAILED
R5699:5701 Coq.Init.Datatypes <> nat ind
R5723:5726 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5728:5730 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5727:5727 Tactics <> n var
R5731:5731 Tactics <> m var
R5712:5714 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5704:5709 Induction <> double def
R5711:5711 Tactics <> n var
R5715:5720 Induction <> double def
R5722:5722 Tactics <> m var
R5945:5951 Tactics <> f_equal thm
R5945:5951 Tactics <> f_equal thm
prf 5970:5991 <> double_injective_take2
R6008:6010 Coq.Init.Datatypes <> nat ind
R6032:6035 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6037:6039 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6036:6036 Tactics <> n var
R6040:6040 Tactics <> m var
R6021:6023 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6013:6018 Induction <> double def
R6020:6020 Tactics <> n var
R6024:6029 Induction <> double def
R6031:6031 Tactics <> m var
R6295:6301 Tactics <> f_equal thm
R6295:6301 Tactics <> f_equal thm
prf 6407:6426 <> nth_error_after_last
R6442:6444 Coq.Init.Datatypes <> nat ind
R6461:6464 Poly <> list ind
R6466:6466 Tactics <> X var
R6484:6487 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6501:6503 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6488:6496 Poly <> nth_error def
R6500:6500 Tactics <> n var
R6498:6498 Tactics <> l var
R6504:6507 Coq.Init.Datatypes <> None constr
R6480:6482 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6472:6477 Poly <> length def
R6479:6479 Tactics <> l var
R6483:6483 Tactics <> n var
def 6815:6820 <> square
R6828:6830 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R6827:6827 Tactics <> n var
R6831:6831 Tactics <> n var
prf 6841:6851 <> square_mult
R6882:6884 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6868:6873 Tactics <> square def
R6877:6879 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R6876:6876 Tactics <> n var
R6880:6880 Tactics <> m var
R6893:6895 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R6885:6890 Tactics <> square def
R6892:6892 Tactics <> n var
R6896:6901 Tactics <> square def
R6903:6903 Tactics <> m var
R6936:6941 Tactics <> square def
R6954:6963 Induction <> mult_assoc thm
R6954:6963 Induction <> mult_assoc thm
R6954:6963 Induction <> mult_assoc thm
R6988:6990 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6984:6986 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R6980:6982 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R6996:6998 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R6992:6994 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R6988:6990 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6984:6986 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R6980:6982 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R6996:6998 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R6992:6994 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R7017:7025 Induction <> mult_comm thm
R7017:7025 Induction <> mult_comm thm
R7017:7025 Induction <> mult_comm thm
R7034:7043 Induction <> mult_assoc thm
R7034:7043 Induction <> mult_assoc thm
R7069:7078 Induction <> mult_assoc thm
R7069:7078 Induction <> mult_assoc thm
R7069:7078 Induction <> mult_assoc thm
def 7111:7113 <> foo
R7119:7121 Coq.Init.Datatypes <> nat ind
prf 7136:7147 <> silly_fact_1
R7169:7171 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7165:7167 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R7160:7162 Tactics <> foo def
R7164:7164 Tactics <> m var
R7183:7185 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R7172:7174 Tactics <> foo def
R7178:7180 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R7177:7177 Tactics <> m var
def 7251:7258 <> sillyfun
R7264:7266 Coq.Init.Datatypes <> nat ind
R7271:7274 Basics <> bool ind
R7285:7288 Basics <> ::nat_scope:x_'=?'_x not
R7284:7284 Tactics <> n var
R7313:7316 Basics <> ::nat_scope:x_'=?'_x not
R7312:7312 Tactics <> n var
R7337:7341 Basics <> false constr
R7324:7328 Basics <> false constr
R7296:7300 Basics <> false constr
prf 7353:7366 <> sillyfun_false
R7379:7381 Coq.Init.Datatypes <> nat ind
R7396:7398 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7386:7393 Tactics <> sillyfun def
R7395:7395 Tactics <> n var
R7399:7403 Basics <> false constr
R7432:7439 Tactics <> sillyfun def
R7455:7458 Basics <> ::nat_scope:x_'=?'_x not
R7455:7458 Basics <> ::nat_scope:x_'=?'_x not
R7502:7505 Basics <> ::nat_scope:x_'=?'_x not
R7502:7505 Basics <> ::nat_scope:x_'=?'_x not
